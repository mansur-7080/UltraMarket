"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const review_controller_1 = require("../controllers/review.controller");
const auth_middleware_1 = require("../middleware/auth.middleware");
const validation_middleware_1 = require("../middleware/validation.middleware");
const review_schemas_1 = require("../schemas/review.schemas");
const router = (0, express_1.Router)();
const reviewController = new review_controller_1.ReviewController();
router.get('/', reviewController.getAllReviews);
router.get('/:id', reviewController.getReviewById);
router.post('/', auth_middleware_1.authMiddleware, (0, validation_middleware_1.validateRequest)(review_schemas_1.createReviewSchema), reviewController.createReview);
router.put('/:id', auth_middleware_1.authMiddleware, (0, validation_middleware_1.validateRequest)(review_schemas_1.updateReviewSchema), reviewController.updateReview);
router.delete('/:id', auth_middleware_1.authMiddleware, reviewController.deleteReview);
router.get('/products/:productId', reviewController.getProductReviews);
router.get('/products/:productId/stats', reviewController.getProductReviewStats);
router.get('/users/:userId', auth_middleware_1.authMiddleware, reviewController.getUserReviews);
router.get('/users/:userId/stats', auth_middleware_1.authMiddleware, reviewController.getUserReviewStats);
router.post('/:id/helpful', auth_middleware_1.authMiddleware, (0, validation_middleware_1.validateRequest)(review_schemas_1.helpfulVoteSchema), reviewController.voteHelpful);
router.delete('/:id/helpful', auth_middleware_1.authMiddleware, reviewController.removeHelpfulVote);
router.post('/:id/flag', auth_middleware_1.authMiddleware, (0, validation_middleware_1.validateRequest)(review_schemas_1.flagReviewSchema), reviewController.flagReview);
router.post('/:id/replies', auth_middleware_1.authMiddleware, (0, validation_middleware_1.validateRequest)(review_schemas_1.replyReviewSchema), reviewController.addReply);
router.get('/search', reviewController.searchReviews);
router.get('/featured', reviewController.getFeaturedReviews);
exports.default = router;
//# sourceMappingURL=review.routes.js.map