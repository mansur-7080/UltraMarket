// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id          String   @id @default(cuid())
  name        String
  slug        String   @unique
  description String?
  image       String?
  parentId    String?
  level       Int      @default(0)
  position    Int      @default(0)
  isActive    Boolean  @default(true)
  seo         Json?    // CategorySEO as JSON
  
  parent      Category? @relation("CategoryHierarchy", fields: [parentId], references: [id])
  children    Category[] @relation("CategoryHierarchy")
  products    Product[]
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@map("categories")
}

model Brand {
  id          String   @id @default(cuid())
  name        String
  slug        String   @unique
  description String?
  logo        String?
  website     String?
  isActive    Boolean  @default(true)
  seo         Json?    // BrandSEO as JSON
  
  products    Product[]
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@map("brands")
}

model Product {
  id                String            @id @default(cuid())
  name              String
  slug              String            @unique
  description       String
  shortDescription  String?
  sku               String            @unique
  price             Decimal           @db.Decimal(10, 2)
  comparePrice      Decimal?          @db.Decimal(10, 2)
  costPrice         Decimal?          @db.Decimal(10, 2)
  weight            Decimal?          @db.Decimal(8, 3)
  dimensions        Json?             // ProductDimensions as JSON
  
  categoryId        String
  category          Category          @relation(fields: [categoryId], references: [id])
  brandId           String?
  brand             Brand?            @relation(fields: [brandId], references: [id])
  
  status            ProductStatus     @default(DRAFT)
  visibility        ProductVisibility @default(PUBLIC)
  isFeatured        Boolean           @default(false)
  isDigital         Boolean           @default(false)
  requiresShipping  Boolean           @default(true)
  taxable           Boolean           @default(true)
  
  metaTitle         String?
  metaDescription   String?
  seo               Json?             // ProductSEO as JSON
  
  images            ProductImage[]
  variants          ProductVariant[]
  attributes        ProductAttribute[]
  inventory         ProductInventory?
  
  tags              String[]
  
  // Rating and Reviews
  averageRating     Decimal?          @db.Decimal(3, 2)
  reviewCount       Int               @default(0)
  ratingDistribution Json?            // Rating distribution as JSON
  
  publishedAt       DateTime?
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  createdBy         String
  updatedBy         String?
  
  @@map("products")
}

model ProductImage {
  id           String  @id @default(cuid())
  productId    String
  product      Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  
  url          String
  thumbnailUrl String
  mediumUrl    String
  largeUrl     String
  altText      String?
  position     Int     @default(0)
  isPrimary    Boolean @default(false)
  fileSize     Int
  mimeType     String
  width        Int
  height       Int
  
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  
  @@map("product_images")
}

model ProductVariant {
  id           String   @id @default(cuid())
  productId    String
  product      Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  
  name         String
  sku          String   @unique
  price        Decimal  @db.Decimal(10, 2)
  comparePrice Decimal? @db.Decimal(10, 2)
  weight       Decimal? @db.Decimal(8, 3)
  attributes   Json     // Record<string, string> as JSON
  image        String?
  isDefault    Boolean  @default(false)
  
  inventory    ProductInventory?
  
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  
  @@map("product_variants")
}

model ProductAttribute {
  id           String      @id @default(cuid())
  productId    String
  product      Product     @relation(fields: [productId], references: [id], onDelete: Cascade)
  
  name         String
  value        String
  displayName  String?
  group        String?
  type         AttributeType
  position     Int         @default(0)
  isRequired   Boolean     @default(false)
  isFilterable Boolean     @default(false)
  
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  
  @@map("product_attributes")
}

model ProductInventory {
  id                String  @id @default(cuid())
  productId         String? @unique
  product           Product? @relation(fields: [productId], references: [id], onDelete: Cascade)
  variantId         String? @unique
  variant           ProductVariant? @relation(fields: [variantId], references: [id], onDelete: Cascade)
  
  quantity          Int     @default(0)
  lowStockThreshold Int     @default(5)
  trackQuantity     Boolean @default(true)
  allowBackorder    Boolean @default(false)
  reservedQuantity  Int     @default(0)
  availableQuantity Int     @default(0)
  incomingQuantity  Int     @default(0)
  
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  
  @@map("product_inventory")
}

// Enums
enum ProductStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}

enum ProductVisibility {
  PUBLIC
  PRIVATE
  HIDDEN
}

enum AttributeType {
  TEXT
  NUMBER
  BOOLEAN
  SELECT
  MULTISELECT
  DATE
  COLOR
  URL
} 